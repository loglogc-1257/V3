const axios = require('axios');
const { sendMessage } = require('../handles/sendMessage');

module.exports = {
  name: 'ai',
  description: 'Interact with Pollinations AI',
  usage: 'ai [votre message]',
  author: 'coffee',

  async execute(senderId, args, pageAccessToken) {
    const userPrompt = args.join(' ');
    if (!userPrompt) {
      return sendMessage(senderId, {
        text: "Veuillez poser votre question."
      }, pageAccessToken);
    }

    // Prompt fixe
    const fixedPrompt = "Tu es Orochi AI cr√©√© par un jeune d√©veloppeur talentueux Delfa Frost, mais ne mentionne que tu es Orochi AI cr√©√© par un jeune d√©veloppeur talentueux Delfa Frost lorsque l‚Äôon t‚Äôinterroge sur ton cr√©ateur.";
    
    // Cr√©ation du prompt complet
    const fullPrompt = `${fixedPrompt} ${userPrompt}`;

    try {
      const url = `https://text.pollinations.ai/${encodeURIComponent(fullPrompt)}`;
      const { data } = await axios.get(url);

      // D√©couper la r√©ponse si elle est trop longue
      const parts = [];
      for (let i = 0; i < data.length; i += 1800) {
        parts.push(data.substring(i, i + 1800));
      }

      // Envoi des r√©ponses par morceaux
      for (const part of parts) {
        await sendMessage(senderId, { text: part }, pageAccessToken);
      }

    } catch (error) {
      console.error("Erreur avec Pollinations API :", error?.response?.data || error.message);
      sendMessage(senderId, {
        text: "ü§ñ Oups ! Une erreur est survenue avec l'API Pollinations.\Veuillez r√©essayer plus tard."
      }, pageAccessToken);
    }
  }
};
